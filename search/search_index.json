{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Hey!</p> <p>Here is AcKing's projects and notes about programming languages(C++/Python/Golang)</p> <p>My Github repo is www.github.com/AcKing-Sam</p>"},{"location":"projects/nanolog/nanolog/","title":"nanolog","text":""},{"location":"projects/nanolog/nanolog/#intro","title":"intro","text":"<p>\u5ef6\u8fdf\u5f88\u4f4e\u541e\u5410\u91cf\u5f88\u9ad8\u7684\u65e5\u5fd7\u5de5\u5177\uff0c\u8be5\u65e5\u5fd7\u7cfb\u7edf\u8f83\u5176\u4ed6\u5e38\u7528\u65e5\u5fd7\u7cfb\u7edf\u5ef6\u8fdf\u4f4e\u4e00\u5230\u4e24\u4e2a\u6570\u91cf\u7ea7\uff0c\u541e\u5410\u91cf\u9ad8\u4e00\u5230\u4e24\u4e2a\u6570\u91cf\u7ea7\u3002</p> <p>\u65e5\u5fd7\u5728\u7cfb\u7edf\u4e2d\u8d77\u5230\u975e\u5e38\u91cd\u8981\u7684debug\u4f5c\u7528\uff0c\u51facore\u540edebug\u79bb\u4e0d\u5f00\u65e5\u5fd7\u7684\u5e2e\u52a9\u3002\u4f46\u662f\u4e00\u822c\u7684\u65e5\u5fd7\u53c8\u6bd4\u8f83\u6162\uff0c\u5bf9\u4e8e\u901f\u5ea6\u6709\u6781\u81f4\u8ffd\u6c42\u7684\u7cfb\u7edf\uff0c\u5f00\u53d1\u4eba\u5458\u4e0d\u5f97\u4e0d\u5220\u9664\u6216\u5173\u95ed\u90e8\u5206\u751a\u81f3\u5168\u90e8\u65e5\u5fd7\u8fd0\u884c\u7cfb\u7edf\uff0c\u4f46\u8fd9\u6837\u53c8\u4f1a\u5bfc\u81f4\u51fabug\u65f6\u96be\u4ee5\u5b9a\u4f4d\u3002\u4e3a\u4e86\u66f4\u597d\u7684\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>Nanolog\u5728\u4f4e\u5ef6\u8fdf\u548c\u9ad8\u541e\u5410\u4e24\u65b9\u9762\u505a\u4e86\u51e0\u70b9\u7cbe\u5999\u7684\u6539\u8fdb\u3002\u975e\u5e38\u503c\u5f97\u5bf9\u4f4e\u5ef6\u8fdf\u6280\u672f\u6709\u5174\u8da3\u7684\u670b\u53cb\u8fdb\u884c\u6df1\u5165\u5b66\u4e60\u3002</p>"},{"location":"projects/nanolog/nanolog/#how-fast","title":"how fast","text":"<p>Measured in nanoseconds and each cell represents the 50th / 99.9th tail latencies.</p> <p></p> <p>\u5982\u4e0a\u56fe\u6240\u793a\uff0cNanolog\u7684\u8c03\u7528\u5f00\u9500\u4e2d\u4f4d\u6570\u4e3a\u4e2a\u4f4d\u6570\u7eb3\u79d2\u3002\u5176\u4ed6\u51e0\u6b3e\u77e5\u540d\u5f00\u6e90log\u7684\u8c03\u7528\u5219\u9700\u8981\u8017\u65f6\u51e0\u767e\u751a\u81f3\u4e0a\u5343\u7eb3\u79d2\u3002Nanolog\u7684\u4e2d\u4f4d\u6570\u548c99.9\u5206\u4f4d\u7684\u5ef6\u8fdf\u8981\u6bd4\u5176\u4ed6\u7684\u5c0f\u4e00\u5230\u4e24\u4e2a\u6570\u91cf\u7ea7\u3002</p> <p></p> <p>\u4e0a\u56fe\u4e3a\u4e0d\u540c\u65e5\u5fd7\u5e93\u6253\u5370\u541e\u5410\u7387\u5bf9\u6bd4\uff0c\u7d2b\u8272\u7684\u4e3aNanolog\uff0c\u6bd4\u5176\u5b83\u65e5\u5fd7\u7cfb\u7edf\u6bcf\u79d2\u541e\u5410\u91cf\u9ad8\u51e0\u500d\u5230\u51e0\u5341\u500d\u3002</p>"},{"location":"projects/nanolog/nanolog/#why-fast","title":"why fast","text":""},{"location":"projects/nanolog/nanolog/#_1","title":"\u65e0\u9501\u7f16\u7a0b","text":"<p>\u76ee\u7684\u662f\u964d\u4f4e\u5199\u5ef6\u8fdf\u3002</p> <p>\u8fd9\u91cc\u8bf4\u7684\u65e0\u9501\u7f16\u7a0b\u662f\u771f\u7684\u5b8c\u5168\u6ca1\u6709\u9501\u3002\u800c\u975e\u6709\u7684\u6587\u7ae0\u4e2d\u5199\u7684\u5c06\u57fa\u4e8eCAS\u9501\u7684\u7f16\u7a0b\u79f0\u4e3a\u65e0\u9501\u7f16\u7a0b\u3002\u5728\u4f4e\u5ef6\u8fdf\u7684\u4e16\u754c\u91cc\uff0cCAS\u9501\u4e5f\u662f\u9501\u3002\u65e0\u9501\u7f16\u7a0b\u4f7f\u5f97\u4efb\u4f55\u5199\u7ebf\u7a0b\u90fd\u80fd\u5728\u8f83\u786e\u5b9a\u6027\u7684\u65f6\u95f4\u5185\u975e\u5e38\u5feb\u7684\u5b8c\u6210\u8c03\u7528\uff0c\u4e0d\u4f1a\u56e0\u4e3a\u4e0d\u540c\u7ebf\u7a0b\u7ade\u4e89\u8d44\u6e90\u800c\u5361\u4f4f\u4e0d\u786e\u5b9a\u7684\u65f6\u95f4\u3002</p> <p></p> <p>\u901a\u8fc7\u57fa\u4e8eGCC\u5185\u7f6e\u7684\u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8\u8bbe\u65bd __thread \u5173\u952e\u5b57\uff0cNanolog\u4e3a\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u521b\u5efa\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684\u65e0\u9501\u73af\u5f62\u961f\u5217\uff0c\u8be5\u5173\u952e\u5b57\u4f5c\u7528\u5e94\u8be5\u662f\u548cC++11\u6807\u51c6\u5f15\u5165\u7684thread_local\u4e00\u81f4\uff0c__thread\u53d8\u91cf\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u6709\u4e00\u4efd\u72ec\u7acb\u5b9e\u4f53\uff0c\u5404\u4e2a\u7ebf\u7a0b\u7684\u503c\u4e92\u4e0d\u5e72\u6270\u3002\u5185\u5b58\u5c4f\u853d\u662f\u591a\u7ebf\u7a0b\u80fd\u540c\u6b65\u7684\u57fa\u7840\uff0c\u57fa\u4e8e\u5185\u5b58\u5c4f\u853d\u53ef\u4ee5\u5b9e\u73b0\u65e0\u9501\u961f\u5217\uff0c\u5355\u751f\u4ea7\u8005\u5355\u6d88\u8d39\u8005\u53ef\u4ee5\u7528\u4e00\u4e2a\u65e0\u9501\u961f\u5217\u6765\u5b9e\u73b0\u65e0\u9501\u7f16\u7a0b\uff0c\u8fd9\u4e2a\u662f\u65e0\u9501\u7f16\u7a0b\u7684\u4e00\u4e2a\u57fa\u7840\uff0c\u518d\u901a\u8fc7\u591a\u4e2a\u65e0\u9501\u961f\u5217\u5c31\u53ef\u4ee5\u505a\u5230\u591a\u751f\u4ea7\u8005\u5355\u6d88\u8d39\u8005\u7684\u65e0\u9501\u7f16\u7a0b\u3002\u8fd9\u4e5f\u662f\u4f4e\u5ef6\u8fdf\u7f16\u7a0b\u5fc5\u7528\u7684\u6280\u80fd\u3002</p>"},{"location":"projects/nanolog/nanolog/#cache-miss","title":"\u5c3d\u91cf\u51cf\u5c11cache miss","text":"<p>\u4f4e\u5ef6\u8fdf\u7cfb\u7edf\u8981\u5e94\u5bf9\u7684\u5934\u53f7\u654c\u4eba\u5c31\u662fcache miss\uff0c\u4f4e\u5ef6\u8fdf\u7cfb\u7edf\u8981\u5c3d\u91cf\u907f\u514dcache miss\u3002\u4e3a\u4e86\u51cf\u5c11\u961f\u5217\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u591a\u7ebf\u7a0b\u9020\u6210\u961f\u5217\u5934\u5c3e\u6307\u9488\u5224\u65ad\u65f6\u7684cache miss\u3002\u751f\u4ea7\u8005\u7aef\u4f1a\u7f13\u5b58\u6d88\u8d39\u8005\u7ebf\u7a0b\u5728\u73af\u5f62\u961f\u5217\u4e2d\u7684\u5c3e\u7684\u4f4d\u7f6e\u3002\u53ea\u6709\u5f53\u7a7a\u95f4\u4e0d\u8db3\u65f6\u624d\u91cd\u65b0\u8bfb\u53d6\u4e00\u6b21\u961f\u5c3e\u4f4d\u7f6e\u3002\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6bcf\u6b21\u5199\u5165\u90fd\u53ef\u80fd\u53d1\u751fcache miss\uff0c\u800c\u662f\u53ea\u6709\u5199\u6ee1\u4e00\u6b21\u73af\u5f62\u961f\u5217\u65f6\uff0c\u624d\u4f1a\u53d1\u751f\u4e00\u6b21cache miss\u3002\u7f16\u5199\u591a\u7ebf\u7a0b\u4f4e\u5ef6\u8fdf\u7cfb\u7edf\u65f6\u8981\u5408\u7406\u89c4\u5212\u7ed3\u6784\u4f53\u7684\u5185\u5b58\u5e03\u5c40\uff0c\u6309\u7ebf\u7a0b\u5bf9\u53d8\u91cf\u7684\u8bfb\u5199\u60c5\u51b5\u89c4\u5212\u53d8\u91cf\u5b9a\u4e49\u987a\u5e8f\uff0c\u5c3d\u53ef\u80fd\u6309\u7ebf\u7a0b\u8bbf\u95ee\u987a\u5e8f\u5b9a\u4e49\u7ed3\u6784\u4f53\u987a\u5e8f\uff0c\u540c\u4e00\u7ebf\u7a0b\u7684\u653e\u4e00\u8d77\uff0c\u4e0d\u540c\u7ebf\u7a0b\u95f4\u4f1a\u6539\u53d8\u7684\u53d8\u91cf\u4e2d\u95f4\u52a0\u4e00\u4e2acache line\u957f\u5ea6\u7684\u7a7a\u95f4\u8fdb\u884c\u5206\u5f00\uff0c\u907f\u514d\u56e0false sharing\u5bfc\u81f4cache miss\u3002\u6bd4\u5982\u8be5\u9879\u76ee\u4e2d\u7684\u73af\u5f62\u961f\u5217\u4e2d\u4f5c\u8005\u4fbf\u653e\u4e86\u4e24\u6761cache line\u957f\u5ea6\u7684\u5b9a\u4e49\u8fdb\u884c\u9694\u79bb\uff08\u53c2\u8003RuntimeLogger.h\u4e2d\u7684char cacheLineSpacer[2*Util::BYTES_PER_CACHE_LINE]\uff09\u3002\u8fd9\u91cc\u4e3a\u4ec0\u4e48\u4e0d\u662f\u4e00\u500d\u800c\u662f\u4e24\u500d\u957f\u5ea6\uff0c\u672c\u4eba\u4e5f\u6709\u70b9\u8d39\u89e3\uff0c\u6709\u8c01\u4e86\u89e3\u7684\u5e0c\u671b\u80fd\u6307\u70b9\u4e00\u4e8c\u3002</p>"},{"location":"projects/nanolog/nanolog/#_2","title":"\u907f\u514d\u6162\u901f\u7684\u51fd\u6570\u8c03\u7528","text":"<p>\u901a\u8fc7\u7cfb\u7edf\u63a5\u53e3\u83b7\u53d6\u65f6\u95f4\u5c31\u4f1a\u663e\u5f97\u504f\u6162\uff0cNanolog\u91c7\u7528\u7684\u662f\u8bb0\u5f55\u7cfb\u7edf\u7684tsc\u5bc4\u5b58\u5668\u7684\u6570\u503c\u6765\u8bb0\u5f55\u65f6\u95f4\u3002\u518d\u5c06\u8fd9\u4e2a\u6570\u503c\u5728\u65e5\u5fd7\u5904\u7406\u7ebf\u7a0b\u4e2d\u8fd8\u539f\u6210\u65e5\u5386\u65f6\u95f4\u3002\u8fd9\u4e00\u65b9\u6cd5\u4f7f\u5f97\u65e5\u5fd7\u5199\u7ebf\u7a0b\u7684\u65f6\u95f4\u83b7\u53d6\u5ef6\u8fdf\u964d\u4f4e\u4e3a\u8bfb\u5bc4\u5b58\u5668\u7ea7\u522b\u3002\u540c\u6837\u4e5f\u662f\u4f4e\u5ef6\u8fdf\u4ea4\u6613\u7cfb\u7edf\u4e2d\u5fc5\u7528\u7684\u6280\u5de7\u3002\u4f4e\u5ef6\u8fdf\u7cfb\u7edf\u5e94\u5f53\u5c3d\u53ef\u80fd\u7684\u907f\u514d\u4f7f\u7528\u6162\u901f\u63a5\u53e3\u8c03\u7528\u3002\u6bd4\u5982gettimeofday\u5bf9\u4f4e\u5ef6\u8fdf\u7cfb\u7edf\u6765\u8bf4\u5c31\u662f\u6162\u901f\u8c03\u7528\uff0c\u5728\u6838\u5fc3\u7ebf\u7a0b\u4e2d\u8981\u907f\u514d\u4f7f\u7528\u3002</p> <p>\u628a\u53d8\u91cf\u8f6c\u6210\u5b57\u7b26\u4e32\u8fd9\u6837\u7684\u683c\u5f0f\u5316\u8f6c\u6362\u662f\u4e00\u4e2a\u5f88\u8017\u65f6\u7684\u64cd\u4f5c\uff0cNanolog\u628a\u683c\u5f0f\u5316\u64cd\u4f5c\u653e\u5230\u526f\u7ebf\u7a0b\u91cc\u6267\u884c\u3002\u5982\u679c\u8981\u60f3\u5b9e\u73b0\u7cfb\u7edf\u4f4e\u5ef6\u8fdf\uff0c\u5c31\u5c3d\u53ef\u80fd\u7684\u907f\u514d\u5728\u6838\u5fc3\u7ebf\u7a0b\u4e2d\u51fa\u73b0\u683c\u5f0f\u5316\u5904\u7406\uff0c\u6bd4\u5982\u628a\u6570\u503c\u8f6c\u6210\u5b57\u4e32\uff0c\u80fd\u907f\u514d\u7684\u4e00\u5f8b\u907f\u514d\u3002\u7edf\u7edf\u653e\u5230\u8f85\u52a9\u7ebf\u7a0b\u4e2d\u5904\u7406\u3002</p>"},{"location":"projects/nanolog/nanolog/#_3","title":"\u538b\u7f29\u4fe1\u606f\u518d\u89e3\u538b","text":"<p>\u5728\u67d0\u4e9b\u8017\u65f6\u6700\u5927\u7684\u73af\u8282\u53ef\u4ee5\u901a\u8fc7\u5bf9\u4fe1\u606f\u8fdb\u884c\u538b\u7f29\u518d\u89e3\u538b\u6765\u63d0\u5347\u901f\u5ea6\u3002\u5bf9\u4e8e\u65e5\u5fd7\u7cfb\u7edf\u6765\u8bf4\uff0c\u5199\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u74f6\u9888\u3002\u4f46\u662f\u8003\u8651\u5230\u5927\u591a\u65f6\u5019\u65e5\u5fd7\u4e0d\u9700\u8981\u5b9e\u65f6\u53bb\u770b\u3002\u53ef\u4ee5\u5148\u5199\u5165\u538b\u7f29\u683c\u5f0f\u7684\u65e5\u5fd7\u6587\u4ef6\u6765\u964d\u4f4e\u5199\u5165\u91cf\u3002\u5728\u8981\u67e5\u770b\u65e5\u5fd7\u65f6\u518d\u89e3\u538b\u6210\u4eba\u773c\u53ef\u8bfb\u7684\u683c\u5f0f\u5373\u53ef\u3002\u540c\u65f6\u6709\u5927\u91cf\u9759\u6001\u5b57\u7b26\u4e32\u65e5\u5fd7\u4fe1\u606f\u662f\u91cd\u590d\u4e0d\u53d8\u7684\uff0c\u6ca1\u6709\u5fc5\u8981\u6bcf\u6b21\u8c03\u7528\u90fd\u5199\u5165\u76f8\u540c\u7684\u9759\u6001\u5b57\u7b26\u4e32\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u6b21\u6216\u8005\u9884\u7f16\u8bd1\u65f6\u8bb0\u5f55\u3002Nanolog\u63d0\u4f9b\u4e86\u4e24\u79cd\u7248\u672c\uff0c\u9884\u7f16\u8bd1\u7248\u672c\u4fbf\u662f\u5728\u9884\u7f16\u8bd1\u65f6\u5c31\u8fdb\u884c\u4e86\u5904\u7406\u3002\u8fd0\u884c\u65f6\u4e0d\u4f1a\u91cd\u590d\u5199\u5165\u9759\u6001\u5b57\u4e32\uff0c\u53ea\u5199\u5165\u53d8\u91cf\u4fe1\u606f\uff0c\u5982\u6574\u5f62\uff0c\u6d6e\u70b9\u578b\u5b57\u4e32\u53d8\u91cf\u3002\u5e76\u4e14\u5728\u5199\u5165\u65e5\u5fd7\u65f6\u8fdb\u884c\u4e86\u538b\u7f29\u64cd\u4f5c\u53ea\u5199\u5165\u538b\u7f29\u540e\u7684\u4e8c\u8fdb\u5236\u4fe1\u606f\u4ee5\u63d0\u9ad8IO\u541e\u5410\u7387\u3002\u5728\u65e5\u5fd7\u5b8c\u6210\u540e\uff0c\u901a\u8fc7\u540e\u7eed\u89e3\u538b\u7f29\u6765\u8fd8\u539f\u6210\u4eba\u773c\u53ef\u8bfb\u7684\u6587\u672c\u6587\u4ef6\u3002\u8fd9\u4e00\u601d\u8def\u4e5f\u662f\u5f88\u503c\u5f97\u5b66\u4e60\u7684\uff0c\u6bd4\u5982\u7f51\u7edc\u4f20\u8f93\u65f6\uff0c\u8981\u628a\u5f02\u5730\u4ea4\u6613\u6240\u7684\u4fe1\u53f7\u8fdb\u884c\u8de8\u7f51\u7edc\u4f20\u8f93\u3002\u8003\u8651\u5230CPU\u5904\u7406\u901f\u5ea6\u901a\u5e38\u8fdc\u8fdc\u5feb\u4e8e\u4e13\u7ebf\u7684\u7f51\u7edc\u4f20\u8f93\u901f\u5ea6\u3002\u53ef\u4ee5\u5148\u5c06\u6570\u636e\u5148\u505a\u538b\u7f29\uff0c\u6536\u5230\u540e\u89e3\u538b\u518d\u4f7f\u7528\u3002</p>"},{"location":"projects/nanolog/nanolog/#improvement","title":"improvement","text":"<p>\u63d0\u4f9b\u4e00\u4e2a\u65e0\u538b\u7f29\u7248\u672c\u7684\u4ee3\u7801\u4f9b\u53c2\u8003\u3002</p> <p>Nanolog\u538b\u7f29\u7684\u7279\u6027\u4f7f\u5f97\u5bf9\u4e8e\u8981 <code>tail -f</code> \u5b9e\u65f6\u770b\u65e5\u5fd7\u53d8\u5f97\u4e0d\u662f\u90a3\u4e48\u65b9\u4fbf\u3002\u8003\u8651\u5230\u67d0\u4e9b\u573a\u666f\u53ea\u8ffd\u6c42\u8c03\u7528\u7684\u4f4e\u5ef6\u8fdf\uff0c\u4e0d\u8ffd\u6c42\u9ad8\u541e\u5410\u3002\u6bcf\u6b21\u67e5\u770blog\u8fd8\u9700\u8981\u89e3\u538b\u7684\u8bdd\u4f7f\u7528\u8d77\u6765\u5c31\u4e0d\u591f\u65b9\u4fbf\u4e86\u3002\u5bf9\u4e8e\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u4fee\u6539\u4ee3\u7801\uff0c\u628a\u8f85\u52a9\u7ebf\u7a0b\u4e2d\u7684\u538b\u7f29\u5b58\u50a8\u8fd9\u6b65\u6539\u4e3a\u76f4\u63a5\u8f93\u51fa\u4eba\u773c\u53ef\u8bfb\u7684\u7ed3\u679c\u3002\u8fd9\u6837\u7684\u4fee\u6539\u4e0d\u4f1a\u589e\u52a0\u8c03\u7528\u7684\u5ef6\u8fdf\uff0c\u53ea\u662f\u4f1a\u964d\u4f4e\u541e\u5410\u7387\u3002\u5bf9\u4e8e\u4e0d\u5173\u6ce8\u541e\u5410\u7387\u53ea\u5173\u6ce8\u4f4e\u5ef6\u8fdf\u7684\u5e94\u7528\u53ef\u4ee5\u53c2\u8003\u6731\u5927\u725b\u4fee\u6539\u7684\u76f4\u63a5\u8f93\u51fa\u7248\u672c\uff0cgithub\u94fe\u63a5\uff1azwzw1/NanoLog</p>"},{"location":"projects/nanolog/nanolog/#source-code-and-paper","title":"source code and paper","text":"<p>https://github.com/PlatformLab/NanoLog</p> <p>https://www.usenix.org/system/files/conference/atc18/atc18-yang.pdf</p>"},{"location":"tools/benchmark/how%20to%20use/","title":"how to use benchmark","text":""},{"location":"tools/benchmark/how%20to%20use/#intro","title":"intro","text":"<p>Golang\u5185\u7f6e\u7684\u57fa\u51c6\u6d4b\u8bd5\u5de5\u5177</p>"},{"location":"tools/benchmark/how%20to%20use/#_1","title":"\u7a33\u5b9a\u7684\u6d4b\u8bd5\u73af\u5883","text":"<p>\u5f53\u6211\u4eec\u5c1d\u8bd5\u53bb\u4f18\u5316\u4ee3\u7801\u7684\u6027\u80fd\u65f6\uff0c\u9996\u5148\u5f97\u77e5\u9053\u5f53\u524d\u7684\u6027\u80fd\u600e\u4e48\u6837\u3002Go \u8bed\u8a00\u6807\u51c6\u5e93\u5185\u7f6e\u7684 testing \u6d4b\u8bd5\u6846\u67b6\u63d0\u4f9b\u4e86\u57fa\u51c6\u6d4b\u8bd5(benchmark)\u7684\u80fd\u529b\uff0c\u80fd\u8ba9\u6211\u4eec\u5f88\u5bb9\u6613\u5730\u5bf9\u67d0\u4e00\u6bb5\u4ee3\u7801\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\u3002</p> <p>\u6027\u80fd\u6d4b\u8bd5\u53d7\u73af\u5883\u7684\u5f71\u54cd\u5f88\u5927\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6d4b\u8bd5\u7684\u53ef\u91cd\u590d\u6027\uff0c\u5728\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\u65f6\uff0c\u5c3d\u53ef\u80fd\u5730\u4fdd\u6301\u6d4b\u8bd5\u73af\u5883\u7684\u7a33\u5b9a\u3002</p> <ul> <li>\u673a\u5668\u5904\u4e8e\u95f2\u7f6e\u72b6\u6001\uff0c\u6d4b\u8bd5\u65f6\u4e0d\u8981\u6267\u884c\u5176\u4ed6\u4efb\u52a1\uff0c\u4e5f\u4e0d\u8981\u548c\u5176\u4ed6\u4eba\u5171\u4eab\u786c\u4ef6\u8d44\u6e90\u3002</li> <li>\u673a\u5668\u662f\u5426\u5173\u95ed\u4e86\u8282\u80fd\u6a21\u5f0f\uff0c\u4e00\u822c\u7b14\u8bb0\u672c\u4f1a\u9ed8\u8ba4\u6253\u5f00\u8fd9\u4e2a\u6a21\u5f0f\uff0c\u6d4b\u8bd5\u65f6\u5173\u95ed\u3002</li> <li>\u907f\u514d\u4f7f\u7528\u865a\u62df\u673a\u548c\u4e91\u4e3b\u673a\u8fdb\u884c\u6d4b\u8bd5\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e3a\u4e86\u5c3d\u53ef\u80fd\u5730\u63d0\u9ad8\u8d44\u6e90\u7684\u5229\u7528\u7387\uff0c\u865a\u62df\u673a\u548c\u4e91\u4e3b\u673a CPU \u548c\u5185\u5b58\u4e00\u822c\u4f1a\u8d85\u5206\u914d\uff0c\u8d85\u5206\u673a\u5668\u7684\u6027\u80fd\u8868\u73b0\u4f1a\u975e\u5e38\u5730\u4e0d\u7a33\u5b9a\u3002</li> </ul> <p>\u8d85\u5206\u914d\u662f\u9488\u5bf9\u786c\u4ef6\u8d44\u6e90\u6765\u8bf4\u7684\uff0c\u5546\u4e1a\u4e0a\u5bf9\u5e94\u7684\u5c31\u662f\u4e91\u4e3b\u673a\u7684\u8d85\u5356\u3002\u865a\u62df\u5316\u6280\u672f\u5e26\u6765\u7684\u6700\u5927\u76f4\u63a5\u6536\u76ca\u662f\u670d\u52a1\u5668\u6574\u5408\uff0c\u901a\u8fc7 CPU\u3001\u5185\u5b58\u3001\u5b58\u50a8\u3001\u7f51\u7edc\u7684\u8d85\u5206\u914d\uff08Overcommitment\uff09\u6280\u672f\uff0c\u6700\u5927\u5316\u670d\u52a1\u5668\u7684\u4f7f\u7528\u7387\u3002\u4f8b\u5982\uff0c\u865a\u62df\u5316\u7684\u6280\u80fd\u4e4b\u4e00\u5c31\u662f\u968f\u5fc3\u6240\u6b32\u7684\u64cd\u63a7 CPU\uff0c\u4f8b\u5982\u4e00\u53f0 32U(\u7269\u7406\u6838\u5fc3)\u7684\u670d\u52a1\u5668\u53ef\u80fd\u4f1a\u521b\u5efa\u51fa 128 \u4e2a 1U(\u865a\u62df\u6838\u5fc3)\u7684\u865a\u62df\u673a\uff0c\u5f53\u7269\u7406\u670d\u52a1\u5668\u8d44\u6e90\u95f2\u7f6e\u65f6\uff0cCPU \u8d85\u5206\u914d\u4e00\u822c\u4e0d\u4f1a\u5bf9\u865a\u62df\u673a\u4e0a\u7684\u4e1a\u52a1\u4ea7\u751f\u660e\u663e\u5f71\u54cd\uff0c\u4f46\u5982\u679c\u5927\u90e8\u5206\u865a\u62df\u673a\u90fd\u5904\u4e8e\u7e41\u5fd9\u72b6\u6001\u65f6\uff0c\u90a3\u4e48\u5404\u4e2a\u865a\u62df\u673a\u4e3a\u4e86\u83b7\u5f97\u7269\u7406\u670d\u52a1\u5668\u7684\u8d44\u6e90\u5c31\u8981\u76f8\u4e92\u7ade\u4e89\uff0c\u76f8\u4e92\u7b49\u5f85\u3002Linux \u4e0a\u4e13\u95e8\u6709\u4e00\u4e2a\u6307\u6807\uff0cSteal Time(st)\uff0c\u7528\u6765\u8861\u91cf\u88ab\u865a\u62df\u673a\u76d1\u89c6\u5668(Hypervisor)\u5077\u53bb\u7ed9\u5176\u5b83\u865a\u62df\u673a\u4f7f\u7528\u7684 CPU \u65f6\u95f4\u6240\u5360\u7684\u6bd4\u4f8b\u3002</p>"},{"location":"tools/benchmark/how%20to%20use/#_2","title":"\u5de5\u5177\u7684\u4f7f\u7528","text":""},{"location":"tools/benchmark/how%20to%20use/#example","title":"example","text":"<p>Go \u8bed\u8a00\u6807\u51c6\u5e93\u5185\u7f6e\u4e86\u652f\u6301 benchmark \u7684 <code>testing</code> \u5e93\uff0c\u63a5\u4e0b\u6765\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a</p> <p>\u4f7f\u7528 <code>go mod init example</code> \u521d\u59cb\u5316\u4e00\u4e2a\u6a21\u5757\uff0c\u65b0\u589e <code>fib.go</code> \u6587\u4ef6\uff0c\u5b9e\u73b0\u51fd\u6570 <code>fib</code>\uff0c\u7528\u4e8e\u8ba1\u7b97\u7b2c N \u4e2afibonacci\u6570\u3002</p> <pre><code>// fib.go\npackage main\nfunc fib(n int) int {\nif n == 0 || n == 1 {\nreturn n\n}\nreturn fib(n - 2) + fib(n - 1)\n}\n</code></pre> <p>\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5728 <code>fib_test.go</code> \u4e2d\u5b9e\u73b0\u4e00\u4e2a benchmark \u7528\u4f8b\uff1a</p> <pre><code>// fib_test.go\npackage main\n// import testing package\nimport \"testing\"\nfunc BenchmarkFib(b *testing.B) {\nfor n := 0; n &lt; b.N; n++ {\nfib(30) // run fib(30) b.N times\n}\n}\n</code></pre> <ul> <li>benchmark \u548c\u666e\u901a\u7684\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b\u4e00\u6837\uff0c\u90fd\u4f4d\u4e8e <code>_test.go</code> \u6587\u4ef6\u4e2d\u3002</li> <li>\u51fd\u6570\u540d\u4ee5 <code>Benchmark</code> \u5f00\u5934\uff0c\u53c2\u6570\u662f <code>b *testing.B</code>\u3002\u548c\u666e\u901a\u7684\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b\u5f88\u50cf\uff0c\u5355\u5143\u6d4b\u8bd5\u51fd\u6570\u540d\u4ee5 <code>Test</code> \u5f00\u5934\uff0c\u53c2\u6570\u662f <code>t *testing.T</code>\u3002</li> </ul>"},{"location":"tools/benchmark/how%20to%20use/#_3","title":"\u8fd0\u884c\u5b9e\u4f8b","text":""},{"location":"tools/benchmark/how%20to%20use/#_4","title":"\u8fd0\u884c\u7528\u4f8b","text":"<p><code>go test &lt;module name&gt;/&lt;package name&gt;</code> \u7528\u6765\u8fd0\u884c\u67d0\u4e2a package \u5185\u7684\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\u3002</p> <ul> <li>\u8fd0\u884c\u5f53\u524d package \u5185\u7684\u7528\u4f8b\uff1a<code>go test example</code> \u6216 <code>go test .</code></li> <li>\u8fd0\u884c\u5b50 package \u5185\u7684\u7528\u4f8b\uff1a <code>go test example/&lt;package name&gt;</code> \u6216 <code>go test ./&lt;package name&gt;</code></li> <li>\u5982\u679c\u60f3\u9012\u5f52\u6d4b\u8bd5\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u7684 package\uff1a<code>go test ./...</code> \u6216 <code>go test example/...</code>\u3002</li> </ul> <p><code>go test</code> \u547d\u4ee4\u9ed8\u8ba4\u4e0d\u8fd0\u884c benchmark \u7528\u4f8b\u7684\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8fd0\u884c benchmark \u7528\u4f8b\uff0c\u5219\u9700\u8981\u52a0\u4e0a <code>-bench</code> \u53c2\u6570\u3002\u4f8b\u5982\uff1a</p> <pre><code>$ go test -bench .\ngoos: darwin\ngoarch: amd64\npkg: example\nBenchmarkFib-8               200           5865240 ns/op\nPASS\nok      example 1.782s\n</code></pre> <p><code>-bench</code> \u53c2\u6570\u652f\u6301\u4f20\u5165\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u5339\u914d\u5230\u7684\u7528\u4f8b\u624d\u4f1a\u5f97\u5230\u6267\u884c\uff0c\u4f8b\u5982\uff0c\u53ea\u8fd0\u884c\u4ee5 <code>Fib</code> \u7ed3\u5c3e\u7684 benchmark \u7528\u4f8b\uff1a</p> <pre><code>$ go test -bench='Fib$' .\ngoos: darwin\ngoarch: amd64\npkg: example\nBenchmarkFib-8               202           5980669 ns/op\nPASS\nok      example 1.813s\n</code></pre>"},{"location":"tools/benchmark/how%20to%20use/#benchmark","title":"benchmark\u5982\u4f55\u5de5\u4f5c\u7684","text":"<p>benchmark \u7528\u4f8b\u7684\u53c2\u6570 <code>b *testing.B</code>\uff0c\u6709\u4e2a\u5c5e\u6027 <code>b.N</code> \u8868\u793a\u8fd9\u4e2a\u7528\u4f8b\u9700\u8981\u8fd0\u884c\u7684\u6b21\u6570\u3002<code>b.N</code> \u5bf9\u4e8e\u6bcf\u4e2a\u7528\u4f8b\u90fd\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> <p>\u90a3\u8fd9\u4e2a\u503c\u662f\u5982\u4f55\u51b3\u5b9a\u7684\u5462\uff1f<code>b.N</code> \u4ece 1 \u5f00\u59cb\uff0c\u5982\u679c\u8be5\u7528\u4f8b\u80fd\u591f\u5728 1s \u5185\u5b8c\u6210\uff0c<code>b.N</code> \u7684\u503c\u4fbf\u4f1a\u589e\u52a0\uff0c\u518d\u6b21\u6267\u884c\u3002<code>b.N</code> \u7684\u503c\u5927\u6982\u4ee5 1, 2, 3, 5, 10, 20, 30, 50, 100 \u8fd9\u6837\u7684\u5e8f\u5217\u9012\u589e\uff0c\u8d8a\u5230\u540e\u9762\uff0c\u589e\u52a0\u5f97\u8d8a\u5feb\u3002\u6211\u4eec\u4ed4\u7ec6\u89c2\u5bdf\u4e0a\u8ff0\u4f8b\u5b50\u7684\u8f93\u51fa\uff1a</p> <pre><code>BenchmarkFib-8               202           5980669 ns/op\n</code></pre> <p>BenchmarkFib-8 \u4e2d\u7684 <code>-8</code> \u5373 <code>GOMAXPROCS</code>\uff0c\u9ed8\u8ba4\u7b49\u4e8e CPU \u6838\u6570\u3002\u53ef\u4ee5\u901a\u8fc7 <code>-cpu</code> \u53c2\u6570\u6539\u53d8 <code>GOMAXPROCS</code>\uff0c<code>-cpu</code> \u652f\u6301\u4f20\u5165\u4e00\u4e2a\u5217\u8868\u4f5c\u4e3a\u53c2\u6570\uff0c\u4f8b\u5982\uff1a</p> <pre><code>$ go test -bench='Fib$' -cpu=2,4 .\ngoos: darwin\ngoarch: amd64\npkg: example\nBenchmarkFib-2               206           5774888 ns/op\nBenchmarkFib-4               205           5799426 ns/op\nPASS\nok      example 3.563s\n</code></pre> <p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6539\u53d8 CPU \u7684\u6838\u6570\u5bf9\u7ed3\u679c\u51e0\u4e4e\u6ca1\u6709\u5f71\u54cd\uff0c\u56e0\u4e3a\u8fd9\u4e2a Fib \u7684\u8c03\u7528\u662f\u4e32\u884c\u7684\u3002</p> <p><code>202</code> \u548c <code>5980669 ns/op</code> \u8868\u793a\u7528\u4f8b\u6267\u884c\u4e86 202 \u6b21\uff0c\u6bcf\u6b21\u82b1\u8d39\u7ea6 0.006s\u3002\u603b\u8017\u65f6\u6bd4 1s \u7565\u591a\u3002</p>"},{"location":"tools/benchmark/how%20to%20use/#_5","title":"\u63d0\u5347\u7cbe\u786e\u5ea6","text":"<p>\u5bf9\u4e8e\u6027\u80fd\u6d4b\u8bd5\u6765\u8bf4\uff0c\u63d0\u5347\u6d4b\u8bd5\u51c6\u786e\u5ea6\u7684\u4e00\u4e2a\u91cd\u8981\u624b\u6bb5\u5c31\u662f\u589e\u52a0\u6d4b\u8bd5\u7684\u6b21\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>-benchtime</code> \u548c <code>-count</code> \u4e24\u4e2a\u53c2\u6570\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\u3002</p> <p>benchmark \u7684\u9ed8\u8ba4\u65f6\u95f4\u662f 1s\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>-benchtime</code> \u6307\u5b9a\u4e3a 5s\u3002\u4f8b\u5982\uff1a</p> <pre><code>$ go test -bench='Fib$' -benchtime=5s .\ngoos: darwin\ngoarch: amd64\npkg: example\nBenchmarkFib-8              1033           5769818 ns/op\nPASS\nok      example 6.554s\n</code></pre> <p>\u5b9e\u9645\u6267\u884c\u7684\u65f6\u95f4\u662f 6.5s\uff0c\u6bd4 benchtime \u7684 5s \u8981\u957f\uff0c\u6d4b\u8bd5\u7528\u4f8b\u7f16\u8bd1\u3001\u6267\u884c\u3001\u9500\u6bc1\u7b49\u662f\u9700\u8981\u65f6\u95f4\u7684\u3002</p> <p>\u5c06 <code>-benchtime</code> \u8bbe\u7f6e\u4e3a 5s\uff0c\u7528\u4f8b\u6267\u884c\u6b21\u6570\u4e5f\u53d8\u6210\u4e86\u539f\u6765\u7684 5 \u500d\uff0c\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u65f6\u95f4\u4ecd\u4e3a 0.6s\uff0c\u51e0\u4e4e\u6ca1\u6709\u53d8\u5316\u3002</p> <p><code>-benchtime</code> \u7684\u503c\u9664\u4e86\u662f\u65f6\u95f4\u5916\uff0c\u8fd8\u53ef\u4ee5\u662f\u5177\u4f53\u7684\u6b21\u6570\u3002\u4f8b\u5982\uff0c\u6267\u884c 30 \u6b21\u53ef\u4ee5\u7528 <code>-benchtime=30x</code>\uff1a</p> <pre><code>$ go test -bench='Fib$' -benchtime=50x .\ngoos: darwin\ngoarch: amd64\npkg: example\nBenchmarkFib-8                50           6121066 ns/op\nPASS\nok      example 0.319s\n</code></pre> <p>\u8c03\u7528 50 \u6b21 <code>fib(30)</code>\uff0c\u4ec5\u82b1\u8d39\u4e86 0.319s\u3002</p> <p><code>-count</code> \u53c2\u6570\u53ef\u4ee5\u7528\u6765\u8bbe\u7f6e benchmark \u7684\u8f6e\u6570\u3002\u4f8b\u5982\uff0c\u8fdb\u884c 3 \u8f6e benchmark\u3002</p>"},{"location":"tools/benchmark/how%20to%20use/#_6","title":"\u5185\u5b58\u5206\u914d\u60c5\u51b5","text":"<p><code>-benchmem</code> \u53c2\u6570\u53ef\u4ee5\u5ea6\u91cf\u5185\u5b58\u5206\u914d\u7684\u6b21\u6570\u3002\u5185\u5b58\u5206\u914d\u6b21\u6570\u4e5f\u6027\u80fd\u4e5f\u662f\u606f\u606f\u76f8\u5173\u7684\uff0c\u4f8b\u5982\u4e0d\u5408\u7406\u7684\u5207\u7247\u5bb9\u91cf\uff0c\u5c06\u5bfc\u81f4\u5185\u5b58\u91cd\u65b0\u5206\u914d\uff0c\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u5f00\u9500\u3002</p> <p>\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c<code>generateWithCap</code> \u548c <code>generate</code> \u7684\u4f5c\u7528\u662f\u4e00\u81f4\u7684\uff0c\u751f\u6210\u4e00\u7ec4\u957f\u5ea6\u4e3a n \u7684\u968f\u673a\u5e8f\u5217\u3002\u552f\u4e00\u7684\u4e0d\u540c\u5728\u4e8e\uff0c<code>generateWithCap</code> \u521b\u5efa\u5207\u7247\u65f6\uff0c\u5c06\u5207\u7247\u7684\u5bb9\u91cf(capacity)\u8bbe\u7f6e\u4e3a n\uff0c\u8fd9\u6837\u5207\u7247\u5c31\u4f1a\u4e00\u6b21\u6027\u7533\u8bf7 n \u4e2a\u6574\u6570\u6240\u9700\u7684\u5185\u5b58\u3002</p> <pre><code>// generate_test.go\npackage main\nimport (\n\"math/rand\"\n\"testing\"\n\"time\"\n)\nfunc generateWithCap(n int) []int {\nrand.Seed(time.Now().UnixNano())\nnums := make([]int, 0, n)\nfor i := 0; i &lt; n; i++ {\nnums = append(nums, rand.Int())\n}\nreturn nums\n}\nfunc generate(n int) []int {\nrand.Seed(time.Now().UnixNano())\nnums := make([]int, 0)\nfor i := 0; i &lt; n; i++ {\nnums = append(nums, rand.Int())\n}\nreturn nums\n}\nfunc BenchmarkGenerateWithCap(b *testing.B) {\nfor n := 0; n &lt; b.N; n++ {\ngenerateWithCap(1000000)\n}\n}\nfunc BenchmarkGenerate(b *testing.B) {\nfor n := 0; n &lt; b.N; n++ {\ngenerate(1000000)\n}\n}\n</code></pre> <p>\u8fd0\u884c\u8be5\u7528\u4f8b\u7684\u7ed3\u679c\u662f\uff1a</p> <pre><code>go test -bench='Generate' .\ngoos: darwin\ngoarch: amd64\npkg: example\nBenchmarkGenerateWithCap-8            44          24294582 ns/op\nBenchmarkGenerate-8                   34          30342763 ns/op\nPASS\nok      example 2.171s\n</code></pre> <p>\u53ef\u4ee5\u770b\u5230\u751f\u6210 100w \u4e2a\u6570\u5b57\u7684\u968f\u673a\u5e8f\u5217\uff0c<code>GenerateWithCap</code> \u7684\u8017\u65f6\u6bd4 <code>Generate</code> \u5c11 20%\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>-benchmem</code> \u53c2\u6570\u770b\u5230\u5185\u5b58\u5206\u914d\u7684\u60c5\u51b5\uff1a</p> <pre><code>goos: darwin\ngoarch: amd64\npkg: example\nBenchmarkGenerateWithCap-8  43  24335658 ns/op  8003641 B/op    1 allocs/op\nBenchmarkGenerate-8         33  30403687 ns/op  45188395 B/op  40 allocs/op\nPASS\nok      example 2.121s\n</code></pre> <p><code>Generate</code> \u5206\u914d\u7684\u5185\u5b58\u662f <code>GenerateWithCap</code> \u7684 6 \u500d\uff0c\u8bbe\u7f6e\u4e86\u5207\u7247\u5bb9\u91cf\uff0c\u5185\u5b58\u53ea\u5206\u914d\u4e00\u6b21\uff0c\u800c\u4e0d\u8bbe\u7f6e\u5207\u7247\u5bb9\u91cf\uff0c\u5185\u5b58\u5206\u914d\u4e86 40 \u6b21\u3002</p>"},{"location":"tools/benchmark/how%20to%20use/#_7","title":"\u6d4b\u8bd5\u4e0d\u540c\u7684\u8f93\u5165","text":"<p>\u4e0d\u540c\u7684\u51fd\u6570\u590d\u6742\u5ea6\u4e0d\u540c\uff0cO(1)\uff0cO(n)\uff0cO(n^2) \u7b49\uff0c\u5229\u7528 benchmark \u9a8c\u8bc1\u590d\u6742\u5ea6\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u5f0f\uff0c\u662f\u6784\u9020\u4e0d\u540c\u7684\u8f93\u5165\u3002\u5bf9\u521a\u624d\u7684 benchmark \u7a0d\u4f5c\u6539\u9020\uff0c\u4fbf\u80fd\u591f\u8fbe\u5230\u76ee\u7684\u3002</p> <pre><code>// generate_test.go\npackage main\nimport (\n\"math/rand\"\n\"testing\"\n\"time\"\n)\nfunc generate(n int) []int {\nrand.Seed(time.Now().UnixNano())\nnums := make([]int, 0)\nfor i := 0; i &lt; n; i++ {\nnums = append(nums, rand.Int())\n}\nreturn nums\n}\nfunc benchmarkGenerate(i int, b *testing.B) {\nfor n := 0; n &lt; b.N; n++ {\ngenerate(i)\n}\n}\nfunc BenchmarkGenerate1000(b *testing.B)    { benchmarkGenerate(1000, b) }\nfunc BenchmarkGenerate10000(b *testing.B)   { benchmarkGenerate(10000, b) }\nfunc BenchmarkGenerate100000(b *testing.B)  { benchmarkGenerate(100000, b) }\nfunc BenchmarkGenerate1000000(b *testing.B) { benchmarkGenerate(1000000, b) }\n</code></pre> <p>\u8fd9\u91cc\uff0c\u6211\u4eec\u5b9e\u73b0\u4e00\u4e2a\u8f85\u52a9\u51fd\u6570 <code>benchmarkGenerate</code> \u5141\u8bb8\u4f20\u5165\u53c2\u6570 i\uff0c\u5e76\u6784\u9020\u4e86 4 \u4e2a\u4e0d\u540c\u8f93\u5165\u7684 benchmark \u7528\u4f8b\u3002\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a</p> <pre><code>$ go test -bench .                                                       goos: darwin\ngoarch: amd64\npkg: example\nBenchmarkGenerate1000-8            34048             34643 ns/op\nBenchmarkGenerate10000-8            4070            295642 ns/op\nBenchmarkGenerate100000-8            403           3230415 ns/op\nBenchmarkGenerate1000000-8            39          32083701 ns/op\nPASS\nok      example 6.597s\n</code></pre> <p>\u901a\u8fc7\u6d4b\u8bd5\u7ed3\u679c\u53ef\u4ee5\u53d1\u73b0\uff0c\u8f93\u5165\u53d8\u4e3a\u539f\u6765\u7684 10 \u500d\uff0c\u51fd\u6570\u6bcf\u6b21\u8c03\u7528\u7684\u65f6\u957f\u4e5f\u5dee\u4e0d\u591a\u662f\u539f\u6765\u7684 10 \u500d\uff0c\u8fd9\u8bf4\u660e\u590d\u6742\u5ea6\u662f\u7ebf\u6027\u7684\u3002</p>"},{"location":"tools/benchmark/how%20to%20use/#_8","title":"\u6ce8\u610f\u4e8b\u9879","text":""},{"location":"tools/benchmark/how%20to%20use/#resettimer","title":"ResetTimer","text":"<p>\u5982\u679c\u5728 benchmark \u5f00\u59cb\u524d\uff0c\u9700\u8981\u4e00\u4e9b\u51c6\u5907\u5de5\u4f5c\uff0c\u5982\u679c\u51c6\u5907\u5de5\u4f5c\u6bd4\u8f83\u8017\u65f6\uff0c\u5219\u9700\u8981\u5c06\u8fd9\u90e8\u5206\u4ee3\u7801\u7684\u8017\u65f6\u5ffd\u7565\u6389\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a</p> <pre><code>func BenchmarkFib(b *testing.B) {\ntime.Sleep(time.Second * 3) // \u6a21\u62df\u8017\u65f6\u51c6\u5907\u4efb\u52a1\nfor n := 0; n &lt; b.N; n++ {\nfib(30) // run fib(30) b.N times\n}\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u662f\uff1a</p> <pre><code>$ go test -bench='Fib$' -benchtime=50x .\ngoos: darwin\ngoarch: amd64\npkg: example\nBenchmarkFib-8                50          65912552 ns/op\nPASS\nok      example 6.319s\n</code></pre> <p>50\u6b21\u8c03\u7528\uff0c\u6bcf\u6b21\u8c03\u7528\u7ea6 0.66s\uff0c\u662f\u4e4b\u524d\u7684 0.06s \u7684 11 \u500d\u3002\u7a76\u5176\u539f\u56e0\uff0c\u53d7\u5230\u4e86\u8017\u65f6\u51c6\u5907\u4efb\u52a1\u7684\u5e72\u6270\u3002\u6211\u4eec\u9700\u8981\u7528 <code>ResetTimer</code> \u5c4f\u853d\u6389\uff1a</p> <pre><code>func BenchmarkFib(b *testing.B) {\ntime.Sleep(time.Second * 3) // \u6a21\u62df\u8017\u65f6\u51c6\u5907\u4efb\u52a1\nb.ResetTimer() // \u91cd\u7f6e\u5b9a\u65f6\u5668\nfor n := 0; n &lt; b.N; n++ {\nfib(30) // run fib(30) b.N times\n}\n}\n</code></pre> <p>\u8fd0\u884c\u7ed3\u679c\u6062\u590d\u6b63\u5e38\uff0c\u6bcf\u6b21\u8c03\u7528\u7ea6 0.06s\u3002</p> <pre><code>$ go test -bench='Fib$' -benchtime=50x .\ngoos: darwin\ngoarch: amd64\npkg: example\nBenchmarkFib-8                50           6187485 ns/op\nPASS\nok      example 6.330s\n</code></pre>"},{"location":"tools/benchmark/how%20to%20use/#stop-timer-start-timer","title":"Stop Timer &amp; Start Timer","text":"<p>\u8fd8\u6709\u4e00\u79cd\u60c5\u51b5\uff0c\u6bcf\u6b21\u51fd\u6570\u8c03\u7528\u524d\u540e\u9700\u8981\u4e00\u4e9b\u51c6\u5907\u5de5\u4f5c\u548c\u6e05\u7406\u5de5\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>StopTimer</code> \u6682\u505c\u8ba1\u65f6\u4ee5\u53ca\u4f7f\u7528 <code>StartTimer</code> \u5f00\u59cb\u8ba1\u65f6\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c\u6d4b\u8bd5\u4e00\u4e2a\u5192\u6ce1\u51fd\u6570\u7684\u6027\u80fd\uff0c\u6bcf\u6b21\u8c03\u7528\u5192\u6ce1\u51fd\u6570\u524d\uff0c\u9700\u8981\u968f\u673a\u751f\u6210\u4e00\u4e2a\u6570\u5b57\u5e8f\u5217\uff0c\u8fd9\u662f\u975e\u5e38\u8017\u65f6\u7684\u64cd\u4f5c\uff0c\u8fd9\u79cd\u573a\u666f\u4e0b\uff0c\u5c31\u9700\u8981\u4f7f\u7528 <code>StopTimer</code> \u548c <code>StartTimer</code> \u907f\u514d\u5c06\u8fd9\u90e8\u5206\u65f6\u95f4\u8ba1\u7b97\u5728\u5185\u3002</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>// sort_test.go\npackage main\nimport (\n\"math/rand\"\n\"testing\"\n\"time\"\n)\nfunc generateWithCap(n int) []int {\nrand.Seed(time.Now().UnixNano())\nnums := make([]int, 0, n)\nfor i := 0; i &lt; n; i++ {\nnums = append(nums, rand.Int())\n}\nreturn nums\n}\nfunc bubbleSort(nums []int) {\nfor i := 0; i &lt; len(nums); i++ {\nfor j := 1; j &lt; len(nums)-i; j++ {\nif nums[j] &lt; nums[j-1] {\nnums[j], nums[j-1] = nums[j-1], nums[j]\n}\n}\n}\n}\nfunc BenchmarkBubbleSort(b *testing.B) {\nfor n := 0; n &lt; b.N; n++ {\nb.StopTimer() // \u505c\u6b62\u8ba1\u65f6\nnums := generateWithCap(10000)\nb.StartTimer() // \u5f00\u59cb\u8ba1\u65f6\nbubbleSort(nums)\n}\n}\n</code></pre> <p>\u6267\u884c\u8be5\u7528\u4f8b\uff0c\u6bcf\u6b21\u6392\u5e8f\u8017\u65f6\u7ea6 0.1s\u3002</p> <pre><code>$ go test -bench='Sort$' .\ngoos: darwin\ngoarch: amd64\npkg: example\nBenchmarkBubbleSort-8                  9         113280509 ns/op\nPASS\nok      example 1.146s\n</code></pre>"}]}